#+TITLE: Guile-DSV Architecture
#+STARTUP: content hidestars

Copyright (C) Artyom V. Poptsov <poptsov.artyom@gmail.com>

  Copying and distribution of this file, with or without modification,
  are permitted in any medium without royalty provided the copyright
  notice and this notice are preserved.

* Architecture
The main goal of this project is to provide a [[https://www.gnu.org/software/guile/][GNU Guile]] (Scheme) interface to
parse RFC4180 and more general DSV format.  In addition to that the project
provides a console tool named =dsv= which uses Guile-DSV facilities to handle
DSV data in a terminal

** Code Map
*** Overview
All the GNU Guile modules are in =modules= directory.  =dsv= program source
code can be found in =utils= directory.

*** Main Module
For the common tasks there's a =(dsv)= module that provides basic procedures
to read/write DSV data.

*** Finite State Machine (FSM) Modules
All the files required to build and run the parser FSM are placed in =(dsv
fsm)= modules.  The FSM code is compiled from [[https://plantuml.com/][PlantUML]] diagrams by [[https://github.com/artyom-poptsov/guile-smc][Guile-SMC]].

*** Command Line Interface Modules
The code required for the =dsv= tool is in the =(dsv cli)= modules.

*** Parser Modules
The parser for each format is in its own module:
- =(dsv unix)=: DSV (Unix) parser
- =(dsv rfc4180)=: RFC 4180 parser.

*** DSV Tables
=(dsv table)= contains the code to handle DSV tables.

=(dsv table-preset)= contains the code to draw pseudo-graphic tables in the
terminal.

*** Tests
Tests are in =tests= directory.  They are written using SRFI-61.

When a new functionality is being added a new test case (or several test
cases) should be written for it.

